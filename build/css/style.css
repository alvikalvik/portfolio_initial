/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */

/**
 * Remove the margin in all browsers.
 */

body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */

main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

pre {
  font: 1em monospace, monospace;
  /* 1 */
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */

/**
 * Remove the gray background on active links in IE 10.
 */

a {
  background: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
samp {
  font: 1em monospace, monospace;
  /* 1 */
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove the border on images inside links in IE 10.
 */

img {
  border-style: none;
}

/* Forms
   ========================================================================== */

/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font: 100%/1.15 inherit;
  /* 1 */
  /* 1 */
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */

[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */

/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */

details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */

summary {
  display: list-item;
}

/* Misc
   ========================================================================== */

/**
 * Add the correct display in IE 10+.
 */

template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */

[hidden] {
  display: none;
}

/* poppins-regular - latin */

/* montserrat-regular - latin_cyrillic */

@font-face {
  font-family: 'Montserrat';
  font-style: normal;
  font-weight: 400;
  src: url("../fonts/montserrat-v15-latin_cyrillic-regular.eot");
  /* IE9 Compat Modes */
  src: local(""), url("../fonts/montserrat-v15-latin_cyrillic-regular.eot?#iefix") format("embedded-opentype"), url("../fonts/montserrat-v15-latin_cyrillic-regular.woff2") format("woff2"), url("../fonts/montserrat-v15-latin_cyrillic-regular.woff") format("woff"), url("../fonts/montserrat-v15-latin_cyrillic-regular.ttf") format("truetype"), url("../fonts/montserrat-v15-latin_cyrillic-regular.svg#Montserrat") format("svg");
  /* Legacy iOS */
}

/* montserrat-500 - latin_cyrillic */

@font-face {
  font-family: 'Montserrat';
  font-style: normal;
  font-weight: 500;
  src: url("../fonts/montserrat-v15-latin_cyrillic-500.eot");
  /* IE9 Compat Modes */
  src: local(""), url("../fonts/montserrat-v15-latin_cyrillic-500.eot?#iefix") format("embedded-opentype"), url("../fonts/montserrat-v15-latin_cyrillic-500.woff2") format("woff2"), url("../fonts/montserrat-v15-latin_cyrillic-500.woff") format("woff"), url("../fonts/montserrat-v15-latin_cyrillic-500.ttf") format("truetype"), url("../fonts/montserrat-v15-latin_cyrillic-500.svg#Montserrat") format("svg");
  /* Legacy iOS */
}

/* montserrat-700 - latin_cyrillic */

@font-face {
  font-family: 'Montserrat';
  font-style: normal;
  font-weight: 700;
  src: url("../fonts/montserrat-v15-latin_cyrillic-700.eot");
  /* IE9 Compat Modes */
  src: local(""), url("../fonts/montserrat-v15-latin_cyrillic-700.eot?#iefix") format("embedded-opentype"), url("../fonts/montserrat-v15-latin_cyrillic-700.woff2") format("woff2"), url("../fonts/montserrat-v15-latin_cyrillic-700.woff") format("woff"), url("../fonts/montserrat-v15-latin_cyrillic-700.ttf") format("truetype"), url("../fonts/montserrat-v15-latin_cyrillic-700.svg#Montserrat") format("svg");
  /* Legacy iOS */
}

*,
*::before,
*::after {
  box-sizing: inherit;
  font-family: Montserrat;
  font-weight: 500;
}

html {
  box-sizing: border-box;
}

body {
  margin: 0;
  width: 100%;
}

img {
  max-width: 100%;
}

.container {
  width: 100%;
  padding: 0 10px;
  margin: 0 auto;
}

.title {
  position: relative;
  margin: 0;
  padding: 0;
  font-weight: bold;
  font-size: 16px;
  line-height: 36px;
}

.title--left {
  padding-left: 10px;
  text-align: left;
}

.title--left:before {
  background: #FFA501;
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  width: 36px;
  height: 36px;
  border-radius: 100%;
}

.title--center {
  text-align: center;
}

.title--center:before {
  background: #FFA501;
  content: '';
  position: absolute;
  top: 0;
  left: 50%;
  z-index: -1;
  transform: translateX(-50%);
  width: 36px;
  height: 36px;
  border-radius: 100%;
}

.subtitle {
  font-weight: bold;
  font-size: 24px;
  line-height: 36px;
}

.btn {
  background: #FFA501;
  display: block;
  width: 135px;
  height: 45px;
  color: #000000;
  font-weight: bold;
  font-size: 14px;
  line-height: 45px;
  text-align: center;
  text-decoration: none;
  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);
  transition: background-color .3s;
  cursor: pointer;
}

.btn:hover,
.btn:active {
  background: rgba(255, 165, 1, 0.8);
}

.btn--transparent {
  background: transparent;
  box-shadow: none;
}

.btn--transparent:hover,
.btn--transparent:active {
  background: transparent;
}

.hamburger {
  position: absolute;
  top: 0;
  right: 0;
  padding: 20px;
  cursor: pointer;
}

.hamburger__span {
  display: block;
  margin: 0 0 0 auto;
  width: 30px;
  height: 3px;
  background: #151812;
}

.hamburger__span--middle {
  width: 36px;
  margin-top: 5px;
  margin-bottom: 5px;
}

.menu-overlay {
  background: rgba(255, 255, 255, 0.75);
  visibility: hidden;
  opacity: 0;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  transition: visibility 0.5s, opacity 0.5s;
}

.menu-overlay--active {
  visibility: visible;
  opacity: 1;
}

.menu {
  background: #FFA501;
  position: fixed;
  left: -100%;
  top: 0;
  padding-top: 140px;
  width: 250px;
  height: 100%;
  transition: left 0.5s;
}

.menu--active {
  left: 0;
}

.menu__close {
  position: absolute;
  top: 0;
  right: 0;
  width: 80px;
  height: 80px;
  cursor: pointer;
}

.menu__close:before,
.menu__close:after {
  background: #000000;
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 40px;
  height: 4px;
  border-radius: 2px;
}

.menu__close:before {
  transform: translate(-50%, -50%) rotate(45deg);
}

.menu__close:after {
  transform: translate(-50%, -50%) rotate(-45deg);
}

.menu__list {
  padding: 0;
  margin: 0;
  list-style: none;
  padding-left: 35px;
}

.menu__item {
  position: relative;
  margin-bottom: 15px;
}

.menu__item::before {
  content: '';
  position: absolute;
  top: 12px;
  left: -15px;
  width: 15px;
  height: 15px;
  border: 1px solid #000000;
  border-radius: 100%;
  transition: border 0.3s;
}

.menu__item:hover::before {
  border: 3px solid #000000;
}

.menu__link {
  display: block;
  padding-left: 20px;
  width: 100%;
  height: 100%;
  font-weight: bold;
  font-size: 22px;
  line-height: 36px;
  color: #FFFFFF;
  text-transform: uppercase;
  text-decoration: none;
  transition: color 0.3s;
}

.menu__link:hover,
.menu__link:active {
  color: #dddddd;
}

.menu__socials {
  position: absolute;
  bottom: 45px;
  left: 50%;
  transform: translateX(-50%);
}

.social-list {
  padding: 0;
  margin: 0;
  list-style: none;
  display: flex;
  justify-content: center;
  align-items: center;
}

.social-list__item:not(:last-child) {
  margin-right: 5px;
}

.social-list__link {
  display: block;
  padding: 5px;
  transition: transform 0.3s;
}

.social-list__link:hover,
.social-list__link:active {
  transform: scale(1.2);
}

.hero {
  background: url(../img/bg/hero_bg_mobile@2x.jpg) no-repeat center 0/cover #C0DCF1;
  position: relative;
  z-index: 1;
  padding-top: 200px;
  width: 100%;
  height: 100vh;
  min-height: 400px;
}

@media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), (min-resolution: 1.5dppx) {
  .hero {
    background-image: url(../img/bg/hero_bg_mobile@4x.jpg);
  }
}

.hero__subtitle {
  margin-top: 10px;
  font-size: 26px;
  line-height: 39px;
}

.hero__btns-wrapper {
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-items: center;
  margin-top: 32px;
}

.btn__hero:not(:last-child) {
  margin-right: 5px;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
